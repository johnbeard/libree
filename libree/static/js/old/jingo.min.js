
(function(){var manager,logger,paramCheck;jingo={};jingo.init=function(config){if(!config){logger.warn('A Jingo initialization was attempted with no configuration specified.');return;}
if(config.verbosity){var verbosity=jingo.Logger.Level.valueOf(config.verbosity);if(verbosity){logger.debug('The Jingo logging verbosity will be set to '+verbosity+'.');logger.setVerbosity(verbosity);}else{logger.warn('The provided logging level identifier, '+config.verbosity+' is not a valid logging level.');}}
if(config.repos){jingo.iterators.each(config.repos,function(name,url){logger.info('The '+name+' module repository will be set to '+url+'.');manager.repos[name]=url;});}
if(config.timeout){logger.info('The script loading timeout will be set to '+config.timeout+'.');manager.timeout=config.timeout;}
paramCheck('jingo.init',['verbosity','repos','timeout'],config);};jingo.declare=function(config){paramCheck('jingo.declare',['require','name','as'],config);config.dependencies=config.require;config.body=config.as;manager.declare(config.name,config);};jingo.anonymous=function(config){paramCheck('jingo.anonymous',['require','exec'],config);config.as=config.exec;delete config.exec;jingo.declare(config);};jingo.Module=function(counter){return function(config){var self=this;if(!config){throw new Error('The module\'s configuration cannot be null.');}
if(!(config.dependencies||config.body)){throw new Error('The module\'s configuration must contain dependencies, a body or both.');}
config.body=config.body||function(){};if(typeof config.body!='function'){throw new Error('The module\'s body must be a function.');}
var normalizeRepo=function(repo){if(!repo||/\/$/.exec(repo)){return repo;}
return repo+'/';};this.repo=normalizeRepo(config.repo);this.name=config.name||'anonymous-'+counter++;this.dependencies=config.dependencies||[];this.body=config.body;this.state=jingo.Module.State.LOADING;this.getUrl=function(){if(typeof self.repo==='undefined'||self.repo===null){return null;}
return self.repo+self.name.replace(/\./g,'/')+'.js';};this.toString=function(){return this.name;};};}(0);jingo.Module.State=function(value,label){this.value=value;this.toString=function(){return label;};};jingo.Module.State.valueOf=function(value){return jingo.iterators.find(jingo.Module.State,function(key,state){return state.value===(value&&value.toUpperCase());});};jingo.Module.State.LOADING=new jingo.Module.State('LOADING','Loading...');jingo.Module.State.DECLARED=new jingo.Module.State('DECLARED','Declared.');jingo.Module.State.RESOLVED=new jingo.Module.State('RESOLVED','Resolved.');jingo.Manager=function(){var State=jingo.Module.State;var Module=jingo.Module;var modules={};var self=this;this.repos={main:'scripts'};this.timeout=30000;var parseDependency=function(dependency,defaultRepo){var parts=dependency.split(':');if(parts.length<2){return{repo:defaultRepo||self.repos.main,name:parts[0]};}
return{repo:self.repos[parts[0]],name:parts[1]};};var initializeNamespace=function(module){var currentNamespace=window;var parts=module.toString().split('.');delete parts[parts.length-1];jingo.iterators.each(parts,function(index,part){if(!currentNamespace[part]){currentNamespace[part]={};}
currentNamespace=currentNamespace[part];});};var load=function(dependency){if(!modules[dependency.name]){logger.info('loading module: '+dependency.name+' from repo '+dependency.repo+'...');modules[dependency.name]=new Module({name:dependency.name,repo:dependency.repo,body:function(){}});var module=modules[dependency.name];var script=jingo.dom.create('script',{src:module.getUrl(),type:'text/javascript',charset:'utf-8'});jingo.dom.insertAfter(script,jingo.dom.last('script'));setTimeout(function(){if(module.state===State.LOADING){logger.error('The module: '+module.name+' seems to be stuck in '+State.LOADING+' state.  '+'You may want to verify that its resource path: '+module.getUrl()+' is valid.');}},self.timeout);}};var resolve=function(module){if(module.state!=State.DECLARED){return false;}
logger.debug('checking dependencies for module: '+module+'...');var dependenciesResolved=jingo.iterators.every(module.dependencies,function(index,dependency){dependency=modules[dependency.name];return dependency&&dependency.state==State.RESOLVED;});if(dependenciesResolved){logger.debug('resolving module: '+module+'...');module.state=State.RESOLVED;initializeNamespace(module);module.body();logger.info('module: '+module+' resolved.');}
return dependenciesResolved;};var update=function(){logger.debug('running update...');var resolutions=false;jingo.iterators.each(modules,function(name,module){resolutions=resolve(module)||resolutions;});if(resolutions){update();}};this.declare=function(name,config){config.name=name;var newModule=new Module(config);var module=modules[newModule.name];if(module){module.dependencies=newModule.dependencies;module.body=newModule.body;}else{module=newModule;modules[module.name]=module;}
module.state=State.DECLARED;jingo.iterators.each(module.dependencies,function(index,dependency){dependency=parseDependency(dependency,module.repo);module.dependencies[index]=dependency;load(dependency);});if(resolve(module)){update();}};};manager=new jingo.Manager();jingo.Logger=function(level){var Level=jingo.Logger.Level;var verbosity=level||Level.WARN;this.setVerbosity=function(level){verbosity=level||verbosity;};this.isEnabled=function(level){return verbosity.priority&&level.priority&&level.priority<=verbosity.priority;};this.log=function(level,message){if(this.isEnabled(level)&&typeof console!='undefined'){console.log(message);}};this.debug=function(message){this.log(Level.DEBUG,message);};this.info=function(message){this.log(Level.INFO,message);};this.warn=function(message){this.log(Level.WARN,message);};this.error=function(message){this.log(Level.ERROR,message);};};jingo.Logger.Level=function(value,priority,label){this.value=value;this.priority=priority;this.toString=function(){return label;};};jingo.Logger.Level.valueOf=function(value){return jingo.iterators.find(jingo.Logger.Level,function(key,level){return level.value===(value&&value.toUpperCase());});};jingo.Logger.Level.DEBUG=new jingo.Logger.Level('DEBUG',4,'Debug');jingo.Logger.Level.INFO=new jingo.Logger.Level('INFO',3,'Info');jingo.Logger.Level.WARN=new jingo.Logger.Level('WARN',2,'Warn');jingo.Logger.Level.ERROR=new jingo.Logger.Level('ERROR',1,'Error');jingo.Logger.Level.OFF=new jingo.Logger.Level('OFF',0,'Off');logger=new jingo.Logger();jingo.iterators={each:function(data,closure){for(var key in data){if(data.hasOwnProperty(key)){closure(key,data[key]);}}},every:function(data,predicate){for(var key in data){if(data.hasOwnProperty(key)){if(!predicate(key,data[key])){return false;}}}
return true;},find:function(data,predicate){for(var key in data){if(data.hasOwnProperty(key)){if(predicate(key,data[key])){return data[key];}}}}};jingo.dom={create:function(type,attributes){var element=document.createElement(type);jingo.iterators.each(attributes,function(name,value){element.setAttribute(name,value);});return element;},last:function(type){var elements=document.getElementsByTagName(type);if(!elements.length){return null;}
return elements[elements.length-1];},insertAfter:function(element,target){var parent=target.parentNode;if(target==parent.lastChild){parent.appendChild(element);}else{parent.insertBefore(element,target.nextSibling);}}};paramCheck=function(method,expectedParams,actualParams){if(logger.isEnabled(jingo.Logger.Level.WARN)){jingo.iterators.each(actualParams,function(actualParam){var invalidParam=!jingo.iterators.find(expectedParams,function(index,expectedParam){return actualParam===expectedParam;});if(invalidParam){logger.warn('The unexpected named parameter: '+actualParam+' was passed to the '+method+' function.');delete actualParams[actualParam];}});}};})();